test_negative/negative.py:28: error: "Simple1" has no attribute "SerializeToStringg"  [attr-defined]
test_negative/negative.py:31: error: Argument 1 to "ParseFromString" of "Message" has incompatible type "Simple1"; expected "Union[str, buffer, unicode]"  [arg-type]
test_negative/negative.py:34: error: Argument 1 to "CopyFrom" of "Message" has incompatible type "str"; expected "Simple1"  [arg-type]
test_negative/negative.py:38: error: Argument 1 to "extend" of "list" has incompatible type "RepeatedScalarFieldContainer[unicode]"; expected "Iterable[int]"  [arg-type]
test_negative/negative.py:40: error: Argument "foo" to "TestMessage" has incompatible type "int"; expected "unicode"  [arg-type]
test_negative/negative.py:43: error: Incompatible types in assignment (expression has type "int", variable has type "V")  [assignment]
test_negative/negative.py:46: error: Argument 1 to "HasField" of "Simple1" has incompatible type "Literal['garbage']"; expected "Union[Literal[u'a_boolean'], Literal['a_boolean'], Literal[u'a_enum'], Literal['a_enum'], Literal[u'a_external_enum'], Literal['a_external_enum'], Literal[u'a_inner'], Literal['a_inner'], Literal[u'a_nested'], Literal['a_nested'], Literal[u'a_oneof'], Literal['a_oneof'], Literal[u'a_oneof_1'], Literal['a_oneof_1'], Literal[u'a_oneof_2'], Literal['a_oneof_2'], Literal[u'a_string'], Literal['a_string'], Literal[u'a_uint32'], Literal['a_uint32'], Literal[u'email'], Literal['email'], Literal[u'inner_enum'], Literal['inner_enum'], Literal[u'inner_enum_in_oneof'], Literal['inner_enum_in_oneof'], Literal[u'inner_message'], Literal['inner_message'], Literal[u'nested_enum'], Literal['nested_enum'], Literal[u'nested_message'], Literal['nested_message'], Literal[u'no_package'], Literal['no_package'], Literal[u'outer_enum_in_oneof'], Literal['outer_enum_in_oneof'], Literal[u'outer_message_in_oneof'], Literal['outer_message_in_oneof'], Literal[u'user_id'], Literal['user_id']]"  [arg-type]
test_negative/negative.py:47: error: Argument 1 to "HasField" of "Simple1" has incompatible type "Literal['a_repeated_string']"; expected "Union[Literal[u'a_boolean'], Literal['a_boolean'], Literal[u'a_enum'], Literal['a_enum'], Literal[u'a_external_enum'], Literal['a_external_enum'], Literal[u'a_inner'], Literal['a_inner'], Literal[u'a_nested'], Literal['a_nested'], Literal[u'a_oneof'], Literal['a_oneof'], Literal[u'a_oneof_1'], Literal['a_oneof_1'], Literal[u'a_oneof_2'], Literal['a_oneof_2'], Literal[u'a_string'], Literal['a_string'], Literal[u'a_uint32'], Literal['a_uint32'], Literal[u'email'], Literal['email'], Literal[u'inner_enum'], Literal['inner_enum'], Literal[u'inner_enum_in_oneof'], Literal['inner_enum_in_oneof'], Literal[u'inner_message'], Literal['inner_message'], Literal[u'nested_enum'], Literal['nested_enum'], Literal[u'nested_message'], Literal['nested_message'], Literal[u'no_package'], Literal['no_package'], Literal[u'outer_enum_in_oneof'], Literal['outer_enum_in_oneof'], Literal[u'outer_message_in_oneof'], Literal['outer_message_in_oneof'], Literal[u'user_id'], Literal['user_id']]"  [arg-type]
test_negative/negative.py:51: error: Argument 1 to "HasField" of "SimpleProto3" has incompatible type "Literal[u'garbage']"; expected "Union[Literal[u'OuterMessage3'], Literal['OuterMessage3'], Literal[u'_an_optional_string'], Literal['_an_optional_string'], Literal[u'a_oneof'], Literal['a_oneof'], Literal[u'a_oneof_1'], Literal['a_oneof_1'], Literal[u'a_oneof_2'], Literal['a_oneof_2'], Literal[u'an_optional_string'], Literal['an_optional_string'], Literal[u'b_oneof'], Literal['b_oneof'], Literal[u'b_oneof_1'], Literal['b_oneof_1'], Literal[u'b_oneof_2'], Literal['b_oneof_2'], Literal[u'bool'], Literal['bool'], Literal[u'inner_enum_in_oneof'], Literal['inner_enum_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal['outer_enum_in_oneof'], Literal[u'outer_message'], Literal['outer_message'], Literal[u'outer_message_in_oneof'], Literal['outer_message_in_oneof']]"  [arg-type]
test_negative/negative.py:52: error: Argument 1 to "HasField" of "SimpleProto3" has incompatible type "Literal[u'a_string']"; expected "Union[Literal[u'OuterMessage3'], Literal['OuterMessage3'], Literal[u'_an_optional_string'], Literal['_an_optional_string'], Literal[u'a_oneof'], Literal['a_oneof'], Literal[u'a_oneof_1'], Literal['a_oneof_1'], Literal[u'a_oneof_2'], Literal['a_oneof_2'], Literal[u'an_optional_string'], Literal['an_optional_string'], Literal[u'b_oneof'], Literal['b_oneof'], Literal[u'b_oneof_1'], Literal['b_oneof_1'], Literal[u'b_oneof_2'], Literal['b_oneof_2'], Literal[u'bool'], Literal['bool'], Literal[u'inner_enum_in_oneof'], Literal['inner_enum_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal['outer_enum_in_oneof'], Literal[u'outer_message'], Literal['outer_message'], Literal[u'outer_message_in_oneof'], Literal['outer_message_in_oneof']]"  [arg-type]
test_negative/negative.py:53: error: Argument 1 to "HasField" of "SimpleProto3" has incompatible type "Literal[u'outer_enum']"; expected "Union[Literal[u'OuterMessage3'], Literal['OuterMessage3'], Literal[u'_an_optional_string'], Literal['_an_optional_string'], Literal[u'a_oneof'], Literal['a_oneof'], Literal[u'a_oneof_1'], Literal['a_oneof_1'], Literal[u'a_oneof_2'], Literal['a_oneof_2'], Literal[u'an_optional_string'], Literal['an_optional_string'], Literal[u'b_oneof'], Literal['b_oneof'], Literal[u'b_oneof_1'], Literal['b_oneof_1'], Literal[u'b_oneof_2'], Literal['b_oneof_2'], Literal[u'bool'], Literal['bool'], Literal[u'inner_enum_in_oneof'], Literal['inner_enum_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal['outer_enum_in_oneof'], Literal[u'outer_message'], Literal['outer_message'], Literal[u'outer_message_in_oneof'], Literal['outer_message_in_oneof']]"  [arg-type]
test_negative/negative.py:54: error: Argument 1 to "HasField" of "SimpleProto3" has incompatible type "Literal[u'a_repeated_string']"; expected "Union[Literal[u'OuterMessage3'], Literal['OuterMessage3'], Literal[u'_an_optional_string'], Literal['_an_optional_string'], Literal[u'a_oneof'], Literal['a_oneof'], Literal[u'a_oneof_1'], Literal['a_oneof_1'], Literal[u'a_oneof_2'], Literal['a_oneof_2'], Literal[u'an_optional_string'], Literal['an_optional_string'], Literal[u'b_oneof'], Literal['b_oneof'], Literal[u'b_oneof_1'], Literal['b_oneof_1'], Literal[u'b_oneof_2'], Literal['b_oneof_2'], Literal[u'bool'], Literal['bool'], Literal[u'inner_enum_in_oneof'], Literal['inner_enum_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal['outer_enum_in_oneof'], Literal[u'outer_message'], Literal['outer_message'], Literal[u'outer_message_in_oneof'], Literal['outer_message_in_oneof']]"  [arg-type]
test_negative/negative.py:57: error: Argument 1 to "ClearField" of "Simple1" has incompatible type "Literal['garbage']"; expected "Union[Literal[u'a_boolean'], Literal['a_boolean'], Literal[u'a_enum'], Literal['a_enum'], Literal[u'a_external_enum'], Literal['a_external_enum'], Literal[u'a_inner'], Literal['a_inner'], Literal[u'a_nested'], Literal['a_nested'], Literal[u'a_oneof'], Literal['a_oneof'], Literal[u'a_oneof_1'], Literal['a_oneof_1'], Literal[u'a_oneof_2'], Literal['a_oneof_2'], Literal[u'a_repeated_string'], Literal['a_repeated_string'], Literal[u'a_string'], Literal['a_string'], Literal[u'a_uint32'], Literal['a_uint32'], Literal[u'email'], Literal['email'], Literal[u'email_by_uid'], Literal['email_by_uid'], Literal[u'inner_enum'], Literal['inner_enum'], Literal[u'inner_enum_in_oneof'], Literal['inner_enum_in_oneof'], Literal[u'inner_message'], Literal['inner_message'], Literal[u'nested_enum'], Literal['nested_enum'], Literal[u'nested_message'], Literal['nested_message'], Literal[u'no_package'], Literal['no_package'], Literal[u'outer_enum_in_oneof'], Literal['outer_enum_in_oneof'], Literal[u'outer_message_in_oneof'], Literal['outer_message_in_oneof'], Literal[u'rep_inner_enum'], Literal['rep_inner_enum'], Literal[u'rep_inner_message'], Literal['rep_inner_message'], Literal[u'user_id'], Literal['user_id']]"  [arg-type]
test_negative/negative.py:60: error: Argument 1 to "ClearField" of "SimpleProto3" has incompatible type "Literal['garbage']"; expected "Union[Literal[u'OuterEnum'], Literal['OuterEnum'], Literal[u'OuterMessage3'], Literal['OuterMessage3'], Literal[u'_an_optional_string'], Literal['_an_optional_string'], Literal[u'a_oneof'], Literal['a_oneof'], Literal[u'a_oneof_1'], Literal['a_oneof_1'], Literal[u'a_oneof_2'], Literal['a_oneof_2'], Literal[u'a_outer_enum'], Literal['a_outer_enum'], Literal[u'a_repeated_string'], Literal['a_repeated_string'], Literal[u'a_string'], Literal['a_string'], Literal[u'an_optional_string'], Literal['an_optional_string'], Literal[u'b_oneof'], Literal['b_oneof'], Literal[u'b_oneof_1'], Literal['b_oneof_1'], Literal[u'b_oneof_2'], Literal['b_oneof_2'], Literal[u'bool'], Literal['bool'], Literal[u'inner_enum'], Literal['inner_enum'], Literal[u'inner_enum_in_oneof'], Literal['inner_enum_in_oneof'], Literal[u'map_message'], Literal['map_message'], Literal[u'map_scalar'], Literal['map_scalar'], Literal[u'outer_enum_in_oneof'], Literal['outer_enum_in_oneof'], Literal[u'outer_message'], Literal['outer_message'], Literal[u'outer_message_in_oneof'], Literal['outer_message_in_oneof']]"  [arg-type]
test_negative/negative.py:63: error: Argument 1 to "WhichOneof" of "Simple1" has incompatible type "Literal['garbage']"; expected "Union[Literal[u'a_oneof'], Literal['a_oneof']]"  [arg-type]
test_negative/negative.py:65: error: Incompatible types in assignment (expression has type "Union[Literal[u'a_oneof_1'], Literal[u'a_oneof_2'], Literal[u'outer_message_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal[u'inner_enum_in_oneof'], None]", variable has type "int")  [assignment]
test_negative/negative.py:70: error: Argument 1 to "HasField" of "Simple2" has incompatible type "Union[Literal[u'a_oneof_1'], Literal[u'a_oneof_2'], Literal[u'outer_message_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal[u'inner_enum_in_oneof']]"; expected "Union[Literal[u'a_string'], Literal['a_string']]"  [arg-type]
test_negative/negative.py:74: error: Incompatible types in assignment (expression has type "Union[Literal[u'a_oneof_1'], Literal[u'a_oneof_2'], Literal[u'outer_message_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal[u'inner_enum_in_oneof'], None]", variable has type "str")  [assignment]
test_negative/negative.py:77: error: No overload variant of "WhichOneof" of "SimpleProto3" matches argument type "str"  [call-overload]
test_negative/negative.py:77: note: Possible overload variants:
test_negative/negative.py:77: note:     def WhichOneof(self, oneof_group: Union[Literal[u'_an_optional_string'], Literal['_an_optional_string']]) -> Optional[Literal[u'an_optional_string']]
test_negative/negative.py:77: note:     def WhichOneof(self, oneof_group: Union[Literal[u'a_oneof'], Literal['a_oneof']]) -> Union[Literal[u'a_oneof_1'], Literal[u'a_oneof_2'], Literal[u'outer_message_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal[u'inner_enum_in_oneof'], None]
test_negative/negative.py:77: note:     def WhichOneof(self, oneof_group: Union[Literal[u'b_oneof'], Literal['b_oneof']]) -> Union[Literal[u'b_oneof_1'], Literal[u'b_oneof_2'], None]
test_negative/negative.py:79: error: Incompatible types in assignment (expression has type "Union[Literal[u'a_oneof_1'], Literal[u'a_oneof_2'], Literal[u'outer_message_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal[u'inner_enum_in_oneof'], None]", variable has type "int")  [assignment]
test_negative/negative.py:83: error: Argument 1 to "HasField" of "Simple2" has incompatible type "Union[Literal[u'a_oneof_1'], Literal[u'a_oneof_2'], Literal[u'outer_message_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal[u'inner_enum_in_oneof']]"; expected "Union[Literal[u'a_string'], Literal['a_string']]"  [arg-type]
test_negative/negative.py:87: error: Incompatible types in assignment (expression has type "_ExtensionFieldDescriptor[Simple1, Extensions1]", variable has type "int")  [assignment]
test_negative/negative.py:88: error: "Type[Extensions1]" has no attribute "bad"  [attr-defined]
test_negative/negative.py:90: error: "Extensions1" has no attribute "foo"  [attr-defined]
test_negative/negative.py:91: error: Incompatible types in assignment (expression has type "Extensions2", variable has type "Extensions1")  [assignment]
test_negative/negative.py:95: error: Invalid index type "str" for "_ExtensionDict[Simple1]"; expected type "_ExtensionFieldDescriptor[Simple1, <nothing>]"  [index]
test_negative/negative.py:96: error: Invalid index type "_ExtensionFieldDescriptor[Simple2, SeparateFileExtension]" for "_ExtensionDict[Simple1]"; expected type "_ExtensionFieldDescriptor[Simple1, SeparateFileExtension]"  [index]
test_negative/negative.py:97: error: Unsupported operand types for in ("_ExtensionFieldDescriptor[Simple2, SeparateFileExtension]" and "_ExtensionDict[Simple1]")  [operator]
test_negative/negative.py:98: error: Argument 1 to "__delitem__" of "_ExtensionDict" has incompatible type "_ExtensionFieldDescriptor[Simple2, SeparateFileExtension]"; expected "_ExtensionFieldDescriptor[Simple1, SeparateFileExtension]"  [arg-type]
test_negative/negative.py:99: error: Argument 1 to "HasExtension" of "Message" has incompatible type "_ExtensionFieldDescriptor[Simple2, SeparateFileExtension]"; expected "_ExtensionFieldDescriptor[Simple1, Any]"  [arg-type]
test_negative/negative.py:100: error: Argument 1 to "ClearExtension" of "Message" has incompatible type "_ExtensionFieldDescriptor[Simple1, Extensions1]"; expected "_ExtensionFieldDescriptor[Simple2, Any]"  [arg-type]
test_negative/negative.py:105: error: Incompatible types in assignment (expression has type "int", variable has type "_ExtensionFieldDescriptor[Simple1, Any]")  [assignment]
test_negative/negative.py:109: error: Incompatible types in assignment (expression has type "Union[Literal[u'b_oneof_1'], Literal[u'b_oneof_2'], None]", variable has type "Union[Literal[u'a_oneof_1'], Literal[u'a_oneof_2'], Literal[u'outer_message_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal[u'inner_enum_in_oneof'], None]")  [assignment]
test_negative/negative.py:112: error: "Descriptor" has no attribute "Garbage"  [attr-defined]
test_negative/negative.py:113: error: "Descriptor" has no attribute "Garbage"  [attr-defined]
test_negative/negative.py:116: error: "EnumDescriptor" has no attribute "Garbage"  [attr-defined]
test_negative/negative.py:119: error: "FileDescriptor" has no attribute "Garbage"  [attr-defined]
test_negative/negative.py:126: error: "V" has no attribute "FOO"  [attr-defined]
test_negative/negative.py:130: error: Argument 1 to "Name" of "_EnumTypeWrapper" has incompatible type "int"; expected "V"  [arg-type]
test_negative/negative.py:132: error: Argument 1 to "Name" of "_EnumTypeWrapper" has incompatible type "testproto.test3_pb2.SimpleProto3._InnerEnum.V"; expected "testproto.test3_pb2._OuterEnum.V"  [arg-type]
test_negative/negative.py:134: error: Argument 1 to "Name" of "_EnumTypeWrapper" has incompatible type "testproto.test3_pb2.SimpleProto3._InnerEnum.V"; expected "testproto.test3_pb2._OuterEnum.V"  [arg-type]
test_negative/negative.py:136: error: Argument 1 to "Name" of "_EnumTypeWrapper" has incompatible type "testproto.test3_pb2.SimpleProto3._InnerEnum.V"; expected "testproto.test3_pb2._OuterEnum.V"  [arg-type]
test_negative/negative.py:140: error: "ScalarMap[int, unicode]" has no attribute "get_or_create"  [attr-defined]
test_negative/negative.py:142: error: No overload variant of "get" of "Mapping" matches argument type "str"  [call-overload]
test_negative/negative.py:142: note: Possible overload variant:
test_negative/negative.py:142: note:     def get(self, k: int) -> Optional[unicode]
test_negative/negative.py:142: note:     <1 more non-matching overload not shown>
test_negative/negative.py:143: error: No overload variant of "get" of "Mapping" matches argument type "str"  [call-overload]
test_negative/negative.py:143: note: Possible overload variant:
test_negative/negative.py:143: note:     def get(self, k: int) -> Optional[OuterMessage3]
test_negative/negative.py:143: note:     <1 more non-matching overload not shown>
test_negative/negative.py:146: error: Incompatible types in assignment (expression has type "Optional[unicode]", variable has type "int")  [assignment]
test_negative/negative.py:147: error: Incompatible types in assignment (expression has type "Optional[OuterMessage3]", variable has type "int")  [assignment]
test_negative/negative.py:149: error: Dict entry 0 has incompatible type "str": "int"; expected "int": "unicode"  [dict-item]
test_negative/negative.py:149: error: Dict entry 0 has incompatible type "str": "str"; expected "int": "OuterMessage3"  [dict-item]
test_negative/negative.py:153: error: Incompatible types in assignment (expression has type "int", variable has type "UserId")  [assignment]
test_negative/negative.py:154: error: Incompatible types in assignment (expression has type "str", variable has type "Email")  [assignment]
test_negative/negative.py:155: error: Invalid index type "int" for "ScalarMap[UserId, Email]"; expected type "UserId"  [index]
test_negative/negative.py:155: error: Incompatible types in assignment (expression has type "str", target has type "Email")  [assignment]
test_negative/negative.py:156: error: Incompatible types in assignment (expression has type "str", target has type "Email")  [assignment]
test_negative/negative.py:157: error: Invalid index type "int" for "ScalarMap[UserId, Email]"; expected type "UserId"  [index]
test_negative/negative.py:159: error: Argument "user_id" to "Simple1" has incompatible type "int"; expected "Optional[UserId]"  [arg-type]
test_negative/negative.py:160: error: Argument "email" to "Simple1" has incompatible type "str"; expected "Optional[Email]"  [arg-type]
test_negative/negative.py:161: error: Dict entry 0 has incompatible type "int": "str"; expected "UserId": "Email"  [dict-item]
test_negative/negative.py:165: error: Module "testproto.reexport_pb2" has no attribute "Inner"  [attr-defined]
test_negative/negative.py:169: error: Argument "a_string" to "OuterMessage3" has incompatible type "None"; expected "unicode"  [arg-type]
test_negative/negative.py:174: error: Property "a_repeated_string" defined in "Simple1" is read-only  [misc]
test_negative/negative.py:175: error: Property "rep_inner_enum" defined in "Simple1" is read-only  [misc]
test_negative/negative.py:180: error: "_r_None" has no attribute "invalid"; maybe "valid"?  [attr-defined]
test_negative/negative.py:184: error: Incompatible types in assignment (expression has type "V", variable has type "str")  [assignment]
Found 64 errors in 1 file (checked 17 source files)
