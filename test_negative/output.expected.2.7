test_negative/negative.py:29: error: "Simple1" has no attribute "SerializeToStringg"
test_negative/negative.py:32: error: Argument 1 to "ParseFromString" of "Message" has incompatible type "Simple1"; expected "Union[str, buffer, unicode]"
test_negative/negative.py:35: error: Argument 1 to "CopyFrom" of "Message" has incompatible type "str"; expected "Simple1"
test_negative/negative.py:39: error: Argument 1 to "extend" of "list" has incompatible type "RepeatedScalarFieldContainer[unicode]"; expected "Iterable[int]"
test_negative/negative.py:41: error: Argument "foo" to "TestMessage" has incompatible type "int"; expected "unicode"
test_negative/negative.py:44: error: Incompatible types in assignment (expression has type "int", variable has type "V")
test_negative/negative.py:47: error: Argument 1 to "HasField" of "Simple1" has incompatible type "Literal['garbage']"; expected "Union[Literal[u'a_boolean'], Literal['a_boolean'], Literal[u'a_enum'], Literal['a_enum'], Literal[u'a_external_enum'], Literal['a_external_enum'], Literal[u'a_inner'], Literal['a_inner'], Literal[u'a_nested'], Literal['a_nested'], Literal[u'a_oneof'], Literal['a_oneof'], Literal[u'a_oneof_1'], Literal['a_oneof_1'], Literal[u'a_oneof_2'], Literal['a_oneof_2'], Literal[u'a_string'], Literal['a_string'], Literal[u'a_uint32'], Literal['a_uint32'], Literal[u'email'], Literal['email'], Literal[u'inner_enum'], Literal['inner_enum'], Literal[u'inner_enum_in_oneof'], Literal['inner_enum_in_oneof'], Literal[u'inner_message'], Literal['inner_message'], Literal[u'nested_enum'], Literal['nested_enum'], Literal[u'nested_message'], Literal['nested_message'], Literal[u'no_package'], Literal['no_package'], Literal[u'outer_enum_in_oneof'], Literal['outer_enum_in_oneof'], Literal[u'outer_message_in_oneof'], Literal['outer_message_in_oneof'], Literal[u'user_id'], Literal['user_id']]"
test_negative/negative.py:48: error: Argument 1 to "HasField" of "Simple1" has incompatible type "Literal['a_repeated_string']"; expected "Union[Literal[u'a_boolean'], Literal['a_boolean'], Literal[u'a_enum'], Literal['a_enum'], Literal[u'a_external_enum'], Literal['a_external_enum'], Literal[u'a_inner'], Literal['a_inner'], Literal[u'a_nested'], Literal['a_nested'], Literal[u'a_oneof'], Literal['a_oneof'], Literal[u'a_oneof_1'], Literal['a_oneof_1'], Literal[u'a_oneof_2'], Literal['a_oneof_2'], Literal[u'a_string'], Literal['a_string'], Literal[u'a_uint32'], Literal['a_uint32'], Literal[u'email'], Literal['email'], Literal[u'inner_enum'], Literal['inner_enum'], Literal[u'inner_enum_in_oneof'], Literal['inner_enum_in_oneof'], Literal[u'inner_message'], Literal['inner_message'], Literal[u'nested_enum'], Literal['nested_enum'], Literal[u'nested_message'], Literal['nested_message'], Literal[u'no_package'], Literal['no_package'], Literal[u'outer_enum_in_oneof'], Literal['outer_enum_in_oneof'], Literal[u'outer_message_in_oneof'], Literal['outer_message_in_oneof'], Literal[u'user_id'], Literal['user_id']]"
test_negative/negative.py:52: error: Argument 1 to "HasField" of "SimpleProto3" has incompatible type "Literal[u'garbage']"; expected "Union[Literal[u'OuterMessage3'], Literal['OuterMessage3'], Literal[u'_an_optional_string'], Literal['_an_optional_string'], Literal[u'a_oneof'], Literal['a_oneof'], Literal[u'a_oneof_1'], Literal['a_oneof_1'], Literal[u'a_oneof_2'], Literal['a_oneof_2'], Literal[u'an_optional_string'], Literal['an_optional_string'], Literal[u'b_oneof'], Literal['b_oneof'], Literal[u'b_oneof_1'], Literal['b_oneof_1'], Literal[u'b_oneof_2'], Literal['b_oneof_2'], Literal[u'bool'], Literal['bool'], Literal[u'inner_enum_in_oneof'], Literal['inner_enum_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal['outer_enum_in_oneof'], Literal[u'outer_message'], Literal['outer_message'], Literal[u'outer_message_in_oneof'], Literal['outer_message_in_oneof']]"
test_negative/negative.py:53: error: Argument 1 to "HasField" of "SimpleProto3" has incompatible type "Literal[u'a_string']"; expected "Union[Literal[u'OuterMessage3'], Literal['OuterMessage3'], Literal[u'_an_optional_string'], Literal['_an_optional_string'], Literal[u'a_oneof'], Literal['a_oneof'], Literal[u'a_oneof_1'], Literal['a_oneof_1'], Literal[u'a_oneof_2'], Literal['a_oneof_2'], Literal[u'an_optional_string'], Literal['an_optional_string'], Literal[u'b_oneof'], Literal['b_oneof'], Literal[u'b_oneof_1'], Literal['b_oneof_1'], Literal[u'b_oneof_2'], Literal['b_oneof_2'], Literal[u'bool'], Literal['bool'], Literal[u'inner_enum_in_oneof'], Literal['inner_enum_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal['outer_enum_in_oneof'], Literal[u'outer_message'], Literal['outer_message'], Literal[u'outer_message_in_oneof'], Literal['outer_message_in_oneof']]"
test_negative/negative.py:54: error: Argument 1 to "HasField" of "SimpleProto3" has incompatible type "Literal[u'outer_enum']"; expected "Union[Literal[u'OuterMessage3'], Literal['OuterMessage3'], Literal[u'_an_optional_string'], Literal['_an_optional_string'], Literal[u'a_oneof'], Literal['a_oneof'], Literal[u'a_oneof_1'], Literal['a_oneof_1'], Literal[u'a_oneof_2'], Literal['a_oneof_2'], Literal[u'an_optional_string'], Literal['an_optional_string'], Literal[u'b_oneof'], Literal['b_oneof'], Literal[u'b_oneof_1'], Literal['b_oneof_1'], Literal[u'b_oneof_2'], Literal['b_oneof_2'], Literal[u'bool'], Literal['bool'], Literal[u'inner_enum_in_oneof'], Literal['inner_enum_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal['outer_enum_in_oneof'], Literal[u'outer_message'], Literal['outer_message'], Literal[u'outer_message_in_oneof'], Literal['outer_message_in_oneof']]"
test_negative/negative.py:55: error: Argument 1 to "HasField" of "SimpleProto3" has incompatible type "Literal[u'a_repeated_string']"; expected "Union[Literal[u'OuterMessage3'], Literal['OuterMessage3'], Literal[u'_an_optional_string'], Literal['_an_optional_string'], Literal[u'a_oneof'], Literal['a_oneof'], Literal[u'a_oneof_1'], Literal['a_oneof_1'], Literal[u'a_oneof_2'], Literal['a_oneof_2'], Literal[u'an_optional_string'], Literal['an_optional_string'], Literal[u'b_oneof'], Literal['b_oneof'], Literal[u'b_oneof_1'], Literal['b_oneof_1'], Literal[u'b_oneof_2'], Literal['b_oneof_2'], Literal[u'bool'], Literal['bool'], Literal[u'inner_enum_in_oneof'], Literal['inner_enum_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal['outer_enum_in_oneof'], Literal[u'outer_message'], Literal['outer_message'], Literal[u'outer_message_in_oneof'], Literal['outer_message_in_oneof']]"
test_negative/negative.py:58: error: Argument 1 to "ClearField" of "Simple1" has incompatible type "Literal['garbage']"; expected "Union[Literal[u'a_boolean'], Literal['a_boolean'], Literal[u'a_enum'], Literal['a_enum'], Literal[u'a_external_enum'], Literal['a_external_enum'], Literal[u'a_inner'], Literal['a_inner'], Literal[u'a_nested'], Literal['a_nested'], Literal[u'a_oneof'], Literal['a_oneof'], Literal[u'a_oneof_1'], Literal['a_oneof_1'], Literal[u'a_oneof_2'], Literal['a_oneof_2'], Literal[u'a_repeated_string'], Literal['a_repeated_string'], Literal[u'a_string'], Literal['a_string'], Literal[u'a_uint32'], Literal['a_uint32'], Literal[u'email'], Literal['email'], Literal[u'email_by_uid'], Literal['email_by_uid'], Literal[u'inner_enum'], Literal['inner_enum'], Literal[u'inner_enum_in_oneof'], Literal['inner_enum_in_oneof'], Literal[u'inner_message'], Literal['inner_message'], Literal[u'nested_enum'], Literal['nested_enum'], Literal[u'nested_message'], Literal['nested_message'], Literal[u'no_package'], Literal['no_package'], Literal[u'outer_enum_in_oneof'], Literal['outer_enum_in_oneof'], Literal[u'outer_message_in_oneof'], Literal['outer_message_in_oneof'], Literal[u'rep_inner_enum'], Literal['rep_inner_enum'], Literal[u'rep_inner_message'], Literal['rep_inner_message'], Literal[u'user_id'], Literal['user_id']]"
test_negative/negative.py:61: error: Argument 1 to "ClearField" of "SimpleProto3" has incompatible type "Literal['garbage']"; expected "Union[Literal[u'OuterEnum'], Literal['OuterEnum'], Literal[u'OuterMessage3'], Literal['OuterMessage3'], Literal[u'_an_optional_string'], Literal['_an_optional_string'], Literal[u'a_oneof'], Literal['a_oneof'], Literal[u'a_oneof_1'], Literal['a_oneof_1'], Literal[u'a_oneof_2'], Literal['a_oneof_2'], Literal[u'a_outer_enum'], Literal['a_outer_enum'], Literal[u'a_repeated_string'], Literal['a_repeated_string'], Literal[u'a_string'], Literal['a_string'], Literal[u'an_optional_string'], Literal['an_optional_string'], Literal[u'b_oneof'], Literal['b_oneof'], Literal[u'b_oneof_1'], Literal['b_oneof_1'], Literal[u'b_oneof_2'], Literal['b_oneof_2'], Literal[u'bool'], Literal['bool'], Literal[u'inner_enum'], Literal['inner_enum'], Literal[u'inner_enum_in_oneof'], Literal['inner_enum_in_oneof'], Literal[u'map_message'], Literal['map_message'], Literal[u'map_scalar'], Literal['map_scalar'], Literal[u'outer_enum_in_oneof'], Literal['outer_enum_in_oneof'], Literal[u'outer_message'], Literal['outer_message'], Literal[u'outer_message_in_oneof'], Literal['outer_message_in_oneof']]"
test_negative/negative.py:64: error: Argument 1 to "WhichOneof" of "Simple1" has incompatible type "Literal['garbage']"; expected "Union[Literal[u'a_oneof'], Literal['a_oneof']]"
test_negative/negative.py:66: error: Incompatible types in assignment (expression has type "Union[Literal[u'a_oneof_1'], Literal[u'a_oneof_2'], Literal[u'outer_message_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal[u'inner_enum_in_oneof'], None]", variable has type "int")
test_negative/negative.py:71: error: Argument 1 to "HasField" of "Simple2" has incompatible type "Union[Literal[u'a_oneof_1'], Literal[u'a_oneof_2'], Literal[u'outer_message_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal[u'inner_enum_in_oneof']]"; expected "Union[Literal[u'a_string'], Literal['a_string']]"
test_negative/negative.py:75: error: Incompatible types in assignment (expression has type "Union[Literal[u'a_oneof_1'], Literal[u'a_oneof_2'], Literal[u'outer_message_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal[u'inner_enum_in_oneof'], None]", variable has type "str")
test_negative/negative.py:78: error: No overload variant of "WhichOneof" of "SimpleProto3" matches argument type "str"
test_negative/negative.py:78: note: Possible overload variants:
test_negative/negative.py:78: note:     def WhichOneof(self, oneof_group: Union[Literal[u'_an_optional_string'], Literal['_an_optional_string']]) -> Optional[Literal[u'an_optional_string']]
test_negative/negative.py:78: note:     def WhichOneof(self, oneof_group: Union[Literal[u'a_oneof'], Literal['a_oneof']]) -> Union[Literal[u'a_oneof_1'], Literal[u'a_oneof_2'], Literal[u'outer_message_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal[u'inner_enum_in_oneof'], None]
test_negative/negative.py:78: note:     def WhichOneof(self, oneof_group: Union[Literal[u'b_oneof'], Literal['b_oneof']]) -> Union[Literal[u'b_oneof_1'], Literal[u'b_oneof_2'], None]
test_negative/negative.py:80: error: Incompatible types in assignment (expression has type "Union[Literal[u'a_oneof_1'], Literal[u'a_oneof_2'], Literal[u'outer_message_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal[u'inner_enum_in_oneof'], None]", variable has type "int")
test_negative/negative.py:84: error: Argument 1 to "HasField" of "Simple2" has incompatible type "Union[Literal[u'a_oneof_1'], Literal[u'a_oneof_2'], Literal[u'outer_message_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal[u'inner_enum_in_oneof']]"; expected "Union[Literal[u'a_string'], Literal['a_string']]"
test_negative/negative.py:88: error: Incompatible types in assignment (expression has type "_ExtensionFieldDescriptor[Simple1, Extensions1]", variable has type "int")
test_negative/negative.py:89: error: "Type[Extensions1]" has no attribute "bad"
test_negative/negative.py:91: error: "Extensions1" has no attribute "foo"
test_negative/negative.py:92: error: Incompatible types in assignment (expression has type "Extensions2", variable has type "Extensions1")
test_negative/negative.py:96: error: Invalid index type "str" for "_ExtensionDict[Simple1]"; expected type "_ExtensionFieldDescriptor[Simple1, <nothing>]"
test_negative/negative.py:97: error: Invalid index type "_ExtensionFieldDescriptor[Simple2, SeparateFileExtension]" for "_ExtensionDict[Simple1]"; expected type "_ExtensionFieldDescriptor[Simple1, SeparateFileExtension]"
test_negative/negative.py:98: error: Unsupported operand types for in ("_ExtensionFieldDescriptor[Simple2, SeparateFileExtension]" and "_ExtensionDict[Simple1]")
test_negative/negative.py:99: error: Argument 1 to "__delitem__" of "_ExtensionDict" has incompatible type "_ExtensionFieldDescriptor[Simple2, SeparateFileExtension]"; expected "_ExtensionFieldDescriptor[Simple1, SeparateFileExtension]"
test_negative/negative.py:100: error: Argument 1 to "HasExtension" of "Message" has incompatible type "_ExtensionFieldDescriptor[Simple2, SeparateFileExtension]"; expected "_ExtensionFieldDescriptor[Simple1, Any]"
test_negative/negative.py:101: error: Argument 1 to "ClearExtension" of "Message" has incompatible type "_ExtensionFieldDescriptor[Simple1, Extensions1]"; expected "_ExtensionFieldDescriptor[Simple2, Any]"
test_negative/negative.py:106: error: Incompatible types in assignment (expression has type "int", variable has type "_ExtensionFieldDescriptor[Simple1, Any]")
test_negative/negative.py:110: error: Incompatible types in assignment (expression has type "Union[Literal[u'b_oneof_1'], Literal[u'b_oneof_2'], None]", variable has type "Union[Literal[u'a_oneof_1'], Literal[u'a_oneof_2'], Literal[u'outer_message_in_oneof'], Literal[u'outer_enum_in_oneof'], Literal[u'inner_enum_in_oneof'], None]")
test_negative/negative.py:113: error: "Descriptor" has no attribute "Garbage"
test_negative/negative.py:114: error: "Descriptor" has no attribute "Garbage"
test_negative/negative.py:117: error: "EnumDescriptor" has no attribute "Garbage"
test_negative/negative.py:120: error: "FileDescriptor" has no attribute "Garbage"
test_negative/negative.py:127: error: "V" has no attribute "FOO"
test_negative/negative.py:131: error: Argument 1 to "Name" of "_EnumTypeWrapper" has incompatible type "int"; expected "V"
test_negative/negative.py:133: error: Argument 1 to "Name" of "_EnumTypeWrapper" has incompatible type "testproto.test3_pb2.SimpleProto3.InnerEnum.V"; expected "testproto.test3_pb2.OuterEnum.V"
test_negative/negative.py:135: error: Argument 1 to "Name" of "_EnumTypeWrapper" has incompatible type "testproto.test3_pb2.SimpleProto3.InnerEnum.V"; expected "testproto.test3_pb2.OuterEnum.V"
test_negative/negative.py:137: error: Argument 1 to "Name" of "_EnumTypeWrapper" has incompatible type "testproto.test3_pb2.SimpleProto3.InnerEnum.V"; expected "testproto.test3_pb2.OuterEnum.V"
test_negative/negative.py:141: error: "ScalarMap[int, unicode]" has no attribute "get_or_create"
test_negative/negative.py:143: error: No overload variant of "get" of "Mapping" matches argument type "str"
test_negative/negative.py:143: note: Possible overload variant:
test_negative/negative.py:143: note:     def get(self, k: int) -> Optional[unicode]
test_negative/negative.py:143: note:     <1 more non-matching overload not shown>
test_negative/negative.py:144: error: No overload variant of "get" of "Mapping" matches argument type "str"
test_negative/negative.py:144: note: Possible overload variant:
test_negative/negative.py:144: note:     def get(self, k: int) -> Optional[OuterMessage3]
test_negative/negative.py:144: note:     <1 more non-matching overload not shown>
test_negative/negative.py:147: error: Incompatible types in assignment (expression has type "Optional[unicode]", variable has type "int")
test_negative/negative.py:148: error: Incompatible types in assignment (expression has type "Optional[OuterMessage3]", variable has type "int")
test_negative/negative.py:150: error: Dict entry 0 has incompatible type "str": "int"; expected "int": "unicode"
test_negative/negative.py:150: error: Dict entry 0 has incompatible type "str": "str"; expected "int": "OuterMessage3"
test_negative/negative.py:154: error: Incompatible types in assignment (expression has type "int", variable has type "UserId")
test_negative/negative.py:155: error: Incompatible types in assignment (expression has type "str", variable has type "Email")
test_negative/negative.py:156: error: Invalid index type "int" for "ScalarMap[UserId, Email]"; expected type "UserId"
test_negative/negative.py:156: error: Incompatible types in assignment (expression has type "str", target has type "Email")
test_negative/negative.py:157: error: Incompatible types in assignment (expression has type "str", target has type "Email")
test_negative/negative.py:158: error: Invalid index type "int" for "ScalarMap[UserId, Email]"; expected type "UserId"
test_negative/negative.py:159: error: Argument "user_id" to "Simple1" has incompatible type "int"; expected "Optional[UserId]"
test_negative/negative.py:159: error: Argument "email" to "Simple1" has incompatible type "str"; expected "Optional[Email]"
test_negative/negative.py:159: error: Dict entry 0 has incompatible type "int": "str"; expected "UserId": "Email"
test_negative/negative.py:162: error: Module "testproto.reexport_pb2" has no attribute "Inner"
test_negative/negative.py:166: error: Argument "a_bool" to "OuterMessage3" has incompatible type "None"; expected "bool"
test_negative/negative.py:171: error: Property "a_repeated_string" defined in "Simple1" is read-only
test_negative/negative.py:172: error: Property "rep_inner_enum" defined in "Simple1" is read-only
Found 62 errors in 1 file (checked 17 source files)
