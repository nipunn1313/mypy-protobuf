"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import builtins
import concurrent.futures
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.internal.extension_dict
import google.protobuf.message
import google.protobuf.service
import test.test_generated_mypy
import testproto.inner.inner_pb2
import testproto.nested.nested_pb2
import testproto.nopackage_pb2
import testproto.test3_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class OuterEnum(metaclass=_OuterEnum):
    V = typing.NewType('V', builtins.int)

global___OuterEnum = OuterEnum

FOO = OuterEnum.V(1)
BAR = OuterEnum.V(2)

class _OuterEnum(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[OuterEnum.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    FOO = OuterEnum.V(1)
    BAR = OuterEnum.V(2)

class Simple1(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class InnerEnum(metaclass=_InnerEnum):
        V = typing.NewType('V', builtins.int)

    INNER1 = Simple1.InnerEnum.V(1)
    INNER2 = Simple1.InnerEnum.V(2)

    class _InnerEnum(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[InnerEnum.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        INNER1 = Simple1.InnerEnum.V(1)
        INNER2 = Simple1.InnerEnum.V(2)

    class InnerMessage(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...

        def __init__(self,
            ) -> None: ...

    class EmailByUidEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int = ...
        value: typing.Text = ...

        def __init__(self,
            *,
            key : typing.Optional[builtins.int] = ...,
            value : typing.Optional[typing.Text] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal[u"key",b"key",u"value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"key",b"key",u"value",b"value"]) -> None: ...

    A_STRING_FIELD_NUMBER: builtins.int
    A_REPEATED_STRING_FIELD_NUMBER: builtins.int
    A_BOOLEAN_FIELD_NUMBER: builtins.int
    A_UINT32_FIELD_NUMBER: builtins.int
    A_ENUM_FIELD_NUMBER: builtins.int
    A_EXTERNAL_ENUM_FIELD_NUMBER: builtins.int
    A_INNER_FIELD_NUMBER: builtins.int
    A_NESTED_FIELD_NUMBER: builtins.int
    INNER_ENUM_FIELD_NUMBER: builtins.int
    REP_INNER_ENUM_FIELD_NUMBER: builtins.int
    INNER_MESSAGE_FIELD_NUMBER: builtins.int
    REP_INNER_MESSAGE_FIELD_NUMBER: builtins.int
    NO_PACKAGE_FIELD_NUMBER: builtins.int
    NESTED_ENUM_FIELD_NUMBER: builtins.int
    NESTED_MESSAGE_FIELD_NUMBER: builtins.int
    A_ONEOF_1_FIELD_NUMBER: builtins.int
    A_ONEOF_2_FIELD_NUMBER: builtins.int
    OUTER_MESSAGE_IN_ONEOF_FIELD_NUMBER: builtins.int
    OUTER_ENUM_IN_ONEOF_FIELD_NUMBER: builtins.int
    INNER_ENUM_IN_ONEOF_FIELD_NUMBER: builtins.int
    USER_ID_FIELD_NUMBER: builtins.int
    EMAIL_FIELD_NUMBER: builtins.int
    EMAIL_BY_UID_FIELD_NUMBER: builtins.int
    a_string: typing.Text = ...

    @property
    def a_repeated_string(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    a_boolean: builtins.bool = ...
    a_uint32: builtins.int = ...
    a_enum: global___OuterEnum.V = ...
    a_external_enum: testproto.test3_pb2.OuterEnum.V = ...
    inner_enum: global___Simple1.InnerEnum.V = ...

    @property
    def rep_inner_enum(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___Simple1.InnerEnum.V]: ...
    nested_enum: testproto.nested.nested_pb2.AnotherNested.NestedEnum.V = ...
    a_oneof_1: typing.Text = ...
    a_oneof_2: typing.Text = ...
    outer_enum_in_oneof: global___OuterEnum.V = ...
    inner_enum_in_oneof: global___Simple1.InnerEnum.V = ...
    user_id: test.test_generated_mypy.UserId = ...
    email: test.test_generated_mypy.Email = ...

    @property
    def a_inner(self) -> testproto.inner.inner_pb2.Inner: ...

    @property
    def a_nested(self) -> testproto.nested.nested_pb2.Nested: ...

    @property
    def inner_message(self) -> global___Simple1.InnerMessage: ...

    @property
    def rep_inner_message(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Simple1.InnerMessage]: ...

    @property
    def no_package(self) -> testproto.nopackage_pb2.NoPackage: ...

    @property
    def nested_message(self) -> testproto.nested.nested_pb2.AnotherNested.NestedMessage: ...

    @property
    def outer_message_in_oneof(self) -> global___Simple2: ...

    @property
    def email_by_uid(self) -> google.protobuf.internal.containers.ScalarMap[test.test_generated_mypy.UserId, test.test_generated_mypy.Email]: ...

    def __init__(self,
        *,
        a_string : typing.Optional[typing.Text] = ...,
        a_repeated_string : typing.Optional[typing.Iterable[typing.Text]] = ...,
        a_boolean : typing.Optional[builtins.bool] = ...,
        a_uint32 : typing.Optional[builtins.int] = ...,
        a_enum : typing.Optional[global___OuterEnum.V] = ...,
        a_external_enum : typing.Optional[testproto.test3_pb2.OuterEnum.V] = ...,
        a_inner : typing.Optional[testproto.inner.inner_pb2.Inner] = ...,
        a_nested : typing.Optional[testproto.nested.nested_pb2.Nested] = ...,
        inner_enum : typing.Optional[global___Simple1.InnerEnum.V] = ...,
        rep_inner_enum : typing.Optional[typing.Iterable[global___Simple1.InnerEnum.V]] = ...,
        inner_message : typing.Optional[global___Simple1.InnerMessage] = ...,
        rep_inner_message : typing.Optional[typing.Iterable[global___Simple1.InnerMessage]] = ...,
        no_package : typing.Optional[testproto.nopackage_pb2.NoPackage] = ...,
        nested_enum : typing.Optional[testproto.nested.nested_pb2.AnotherNested.NestedEnum.V] = ...,
        nested_message : typing.Optional[testproto.nested.nested_pb2.AnotherNested.NestedMessage] = ...,
        a_oneof_1 : typing.Optional[typing.Text] = ...,
        a_oneof_2 : typing.Optional[typing.Text] = ...,
        outer_message_in_oneof : typing.Optional[global___Simple2] = ...,
        outer_enum_in_oneof : typing.Optional[global___OuterEnum.V] = ...,
        inner_enum_in_oneof : typing.Optional[global___Simple1.InnerEnum.V] = ...,
        user_id : typing.Optional[test.test_generated_mypy.UserId] = ...,
        email : typing.Optional[test.test_generated_mypy.Email] = ...,
        email_by_uid : typing.Optional[typing.Mapping[test.test_generated_mypy.UserId, test.test_generated_mypy.Email]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"a_boolean",b"a_boolean",u"a_enum",b"a_enum",u"a_external_enum",b"a_external_enum",u"a_inner",b"a_inner",u"a_nested",b"a_nested",u"a_oneof",b"a_oneof",u"a_oneof_1",b"a_oneof_1",u"a_oneof_2",b"a_oneof_2",u"a_string",b"a_string",u"a_uint32",b"a_uint32",u"email",b"email",u"inner_enum",b"inner_enum",u"inner_enum_in_oneof",b"inner_enum_in_oneof",u"inner_message",b"inner_message",u"nested_enum",b"nested_enum",u"nested_message",b"nested_message",u"no_package",b"no_package",u"outer_enum_in_oneof",b"outer_enum_in_oneof",u"outer_message_in_oneof",b"outer_message_in_oneof",u"user_id",b"user_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"a_boolean",b"a_boolean",u"a_enum",b"a_enum",u"a_external_enum",b"a_external_enum",u"a_inner",b"a_inner",u"a_nested",b"a_nested",u"a_oneof",b"a_oneof",u"a_oneof_1",b"a_oneof_1",u"a_oneof_2",b"a_oneof_2",u"a_repeated_string",b"a_repeated_string",u"a_string",b"a_string",u"a_uint32",b"a_uint32",u"email",b"email",u"email_by_uid",b"email_by_uid",u"inner_enum",b"inner_enum",u"inner_enum_in_oneof",b"inner_enum_in_oneof",u"inner_message",b"inner_message",u"nested_enum",b"nested_enum",u"nested_message",b"nested_message",u"no_package",b"no_package",u"outer_enum_in_oneof",b"outer_enum_in_oneof",u"outer_message_in_oneof",b"outer_message_in_oneof",u"rep_inner_enum",b"rep_inner_enum",u"rep_inner_message",b"rep_inner_message",u"user_id",b"user_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal[u"a_oneof",b"a_oneof"]) -> typing_extensions.Literal["a_oneof_1","a_oneof_2","outer_message_in_oneof","outer_enum_in_oneof","inner_enum_in_oneof"]: ...
global___Simple1 = Simple1

class Simple2(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    A_STRING_FIELD_NUMBER: builtins.int
    a_string: typing.Text = ...

    def __init__(self,
        *,
        a_string : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"a_string",b"a_string"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"a_string",b"a_string"]) -> None: ...
global___Simple2 = Simple2

class Extensions1(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EXT1_STRING_FIELD_NUMBER: builtins.int
    ext1_string: typing.Text = ...

    ext: google.protobuf.internal.extension_dict._ExtensionFieldDescriptor[global___Simple1, global___Extensions1] = ...

    def __init__(self,
        *,
        ext1_string : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"ext1_string",b"ext1_string"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"ext1_string",b"ext1_string"]) -> None: ...
global___Extensions1 = Extensions1

class Extensions2(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FLAG_FIELD_NUMBER: builtins.int
    flag: builtins.bool = ...

    foo: google.protobuf.internal.extension_dict._ExtensionFieldDescriptor[global___Simple1, global___Extensions2] = ...

    def __init__(self,
        *,
        flag : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"flag",b"flag"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"flag",b"flag"]) -> None: ...
global___Extensions2 = Extensions2

class PythonReservedKeywords(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FROM_FIELD_NUMBER: builtins.int
    IN_FIELD_NUMBER: builtins.int
    IS_FIELD_NUMBER: builtins.int
    FOR_FIELD_NUMBER: builtins.int
    TRY_FIELD_NUMBER: builtins.int
    DEF_FIELD_NUMBER: builtins.int
    NONLOCAL_FIELD_NUMBER: builtins.int
    WHILE_FIELD_NUMBER: builtins.int
    AND_FIELD_NUMBER: builtins.int
    DEL_FIELD_NUMBER: builtins.int
    GLOBAL_FIELD_NUMBER: builtins.int
    NOT_FIELD_NUMBER: builtins.int
    WITH_FIELD_NUMBER: builtins.int
    AS_FIELD_NUMBER: builtins.int
    ELIF_FIELD_NUMBER: builtins.int
    IF_FIELD_NUMBER: builtins.int
    OR_FIELD_NUMBER: builtins.int
    YIELD_FIELD_NUMBER: builtins.int
    ASSERT_FIELD_NUMBER: builtins.int
    ELSE_FIELD_NUMBER: builtins.int
    IMPORT_FIELD_NUMBER: builtins.int
    PASS_FIELD_NUMBER: builtins.int
    BREAK_FIELD_NUMBER: builtins.int
    EXCEPT_FIELD_NUMBER: builtins.int
    RAISE_FIELD_NUMBER: builtins.int
    FALSE_FIELD_NUMBER: builtins.int
    TRUE_FIELD_NUMBER: builtins.int
    CLASS_FIELD_NUMBER: builtins.int
    NONE_FIELD_NUMBER: builtins.int
    VALID_FIELD_NUMBER: builtins.int
    valid: typing.Any = ...

    @property
    def none(self) -> typing.Any: ...

    def __init__(self,
        *,
        none : typing.Optional[typing.Any] = ...,
        valid : typing.Optional[typing.Any] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"False",b"False",u"True",b"True",u"and",b"and",u"as",b"as",u"assert",b"assert",u"break",b"break",u"class",b"class",u"def",b"def",u"del",b"del",u"elif",b"elif",u"else",b"else",u"except",b"except",u"for",b"for",u"from",b"from",u"global",b"global",u"if",b"if",u"import",b"import",u"in",b"in",u"is",b"is",u"none",b"none",u"nonlocal",b"nonlocal",u"not",b"not",u"or",b"or",u"pass",b"pass",u"raise",b"raise",u"try",b"try",u"valid",b"valid",u"while",b"while",u"with",b"with",u"yield",b"yield"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"False",b"False",u"True",b"True",u"and",b"and",u"as",b"as",u"assert",b"assert",u"break",b"break",u"class",b"class",u"def",b"def",u"del",b"del",u"elif",b"elif",u"else",b"else",u"except",b"except",u"for",b"for",u"from",b"from",u"global",b"global",u"if",b"if",u"import",b"import",u"in",b"in",u"is",b"is",u"none",b"none",u"nonlocal",b"nonlocal",u"not",b"not",u"or",b"or",u"pass",b"pass",u"raise",b"raise",u"try",b"try",u"valid",b"valid",u"while",b"while",u"with",b"with",u"yield",b"yield"]) -> None: ...
global___PythonReservedKeywords = PythonReservedKeywords

class PythonReservedKeywordsSmall(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FROM_FIELD_NUMBER: builtins.int

    def __init__(self,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"from",b"from"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"from",b"from"]) -> None: ...
global___PythonReservedKeywordsSmall = PythonReservedKeywordsSmall

class SelfField(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SELF_FIELD_NUMBER: builtins.int
    self: builtins.int = ...

    def __init__(self_,
        *,
        self : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"self",b"self"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"self",b"self"]) -> None: ...
global___SelfField = SelfField

class PythonReservedKeywordsService(google.protobuf.service.Service, metaclass=abc.ABCMeta):
    pass
class PythonReservedKeywordsService_Stub(PythonReservedKeywordsService):
    def __init__(self, rpc_channel: google.protobuf.service.RpcChannel) -> None: ...
    pass
class ATestService(google.protobuf.service.Service, metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Echo(self,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___Simple1,
        done: typing.Optional[typing.Callable[[global___Simple2], None]],
    ) -> concurrent.futures.Future[global___Simple2]: ...
class ATestService_Stub(ATestService):
    def __init__(self, rpc_channel: google.protobuf.service.RpcChannel) -> None: ...
    def Echo(self,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___Simple1,
        done: typing.Optional[typing.Callable[[global___Simple2], None]],
    ) -> concurrent.futures.Future[global___Simple2]: ...