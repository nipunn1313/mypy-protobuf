"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import testproto.test3_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Nested(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    A_FIELD_NUMBER: builtins.int
    a: testproto.test3_pb2.OuterEnum.V = ...
    def __init__(self,
        *,
        a : testproto.test3_pb2.OuterEnum.V = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"a",b"a"]) -> None: ...
global___Nested = Nested

class AnotherNested(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class NestedEnum(metaclass=_NestedEnum):
        V = typing.NewType('V', builtins.int)

    INVALID = AnotherNested.NestedEnum.V(0)
    ONE = AnotherNested.NestedEnum.V(1)
    TWO = AnotherNested.NestedEnum.V(2)

    class _NestedEnum(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[NestedEnum.V], builtins.type):  # type: ignore
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        INVALID = AnotherNested.NestedEnum.V(0)
        ONE = AnotherNested.NestedEnum.V(1)
        TWO = AnotherNested.NestedEnum.V(2)

    class NestedMessage(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class NestedEnum2(metaclass=_NestedEnum2):
            V = typing.NewType('V', builtins.int)

        UNDEFINED = AnotherNested.NestedMessage.NestedEnum2.V(0)
        NESTED_ENUM1 = AnotherNested.NestedMessage.NestedEnum2.V(1)
        NESTED_ENUM2 = AnotherNested.NestedMessage.NestedEnum2.V(2)

        class _NestedEnum2(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[NestedEnum2.V], builtins.type):  # type: ignore
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            UNDEFINED = AnotherNested.NestedMessage.NestedEnum2.V(0)
            NESTED_ENUM1 = AnotherNested.NestedMessage.NestedEnum2.V(1)
            NESTED_ENUM2 = AnotherNested.NestedMessage.NestedEnum2.V(2)

        S_FIELD_NUMBER: builtins.int
        B_FIELD_NUMBER: builtins.int
        NE_FIELD_NUMBER: builtins.int
        NE2_FIELD_NUMBER: builtins.int
        s: typing.Text = ...
        b: builtins.bool = ...
        ne: global___AnotherNested.NestedEnum.V = ...
        ne2: global___AnotherNested.NestedMessage.NestedEnum2.V = ...
        def __init__(self,
            *,
            s : typing.Text = ...,
            b : builtins.bool = ...,
            ne : global___AnotherNested.NestedEnum.V = ...,
            ne2 : global___AnotherNested.NestedMessage.NestedEnum2.V = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"b",b"b",u"ne",b"ne",u"ne2",b"ne2",u"s",b"s"]) -> None: ...

    def __init__(self,
        ) -> None: ...
global___AnotherNested = AnotherNested
